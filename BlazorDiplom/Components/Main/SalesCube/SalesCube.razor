@page "/main"
@using BlazorDiplom.Components.Main.ChooseFilter
@using BlazorDiplom.Components.Main.FuzzyConstructor
@using BlazorDiplom.Components.Main.Shared
@using BlazorDiplom.ViewModels
@using DevExpress.Blazor.Popup;
@using FuzzyDataDbCore.Models

@layout MainLayout

@inherits SalesCubeComponent
<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <h3 style="color: white;">Куб продаж</h3>
            <button @onclick="RunSalesEtlJob" type="button" class="btn btn-primary">Запуск ETL процесса</button>
            <button @onclick="CreateFuzzyParam" type="button" class="btn btn-danger">Создать нечеткую лингв. переменную</button>
            <button @onclick="ApplyFilter" type="button" class="btn btn-danger">Применить фильтр (нечетк. лингв. переменн.)</button>
            @if (GridData == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <DxChart Data="@GridData">
                    <DxChartLineSeries Visible="@DxChartVisible" Name="Продажи"
                                       ArgumentField="@((OlapSales s) => s.MonthName)"
                                       ValueField="@((OlapSales s) => s.Sum)"
                                       DashStyle="ChartDashStyle.Dash">
                    </DxChartLineSeries>
                </DxChart>

                <DxDataGrid Data="@GridData">
                    <DxDataGridColumn Field="@nameof(OlapSales.MonthName)" Caption="Месяц"></DxDataGridColumn>
                    <DxDataGridColumn Field="@nameof(OlapSales.SalesCount)" Caption="Количество продаж"></DxDataGridColumn>
                    <DxDataGridColumn Field="@nameof(OlapSales.Sum)" Caption="Сумма продаж"></DxDataGridColumn>
                </DxDataGrid>
            }

            <DxPopup HeaderText="Конструктор нечеткой лингвистической переменной" @bind-Visible=IsFuzzyQueryConstuctorVisible @onclose="() => IsFuzzyQueryConstuctorVisible = false" >
                <FuzzyConstructor SliceId="@CubeSliceId" OnSavedCallback="()=> IsFuzzyQueryConstuctorVisible=false"></FuzzyConstructor>
            </DxPopup>

            <DxPopup HeaderText="Фильтр" @bind-Visible=IsFilterPopupVisible @onclose="() => IsFilterPopupVisible = false" >
                <ChooseFilter OnChoosedCallback="HandleFilterChanged" CubeSlice="@CubeSliceId"></ChooseFilter>
            </DxPopup>

        </Authorized>
        <NotAuthorized>
            <p>Вы не авторизованы</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>
