using BlazorDiplom.Middleware;
using BlazorSpinner;
using IdentityServerCore.DbContext;
using IdentityServerCore.Models;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;

internal static class Program
{
    internal static void Main(string[] args)
    {
        var builder = WebApplication.CreateBuilder(args);

        builder.Services.AddRazorPages();
        builder.Services.AddServerSideBlazor();
        builder.Services.AddDbContext<IdentityAppDbContext>(options => options.UseSqlServer(builder.Configuration.GetConnectionString("Identity")));

        builder.Services.AddIdentity<User, IdentityRole>(options => { 
            options.SignIn.RequireConfirmedAccount = false; 
            options.User.RequireUniqueEmail = true; 
            options.Password.RequireNonAlphanumeric = false;
            options.Password.RequireLowercase = false;
            options.Password.RequireUppercase = false;
        }).AddEntityFrameworkStores<IdentityAppDbContext>();

        builder.Services.AddScoped<SpinnerService>();
        builder.Services.AddTransient<UserManager<User>>();
        
        var app = builder.Build();

        app.UseMiddleware<AuthMiddleWare>();

        if (!app.Environment.IsDevelopment())
        {
            app.UseHsts();
        }

        app.UseHttpsRedirection();

        app.UseStaticFiles();

        app.UseRouting();
        app.MapBlazorHub();
        app.MapFallbackToPage("/AuthPage");

        app.Run();
    }
}